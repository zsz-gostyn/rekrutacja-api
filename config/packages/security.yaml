security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            stateless: true
            json_login:
                check_path: api_login
                failure_handler: json_login.failure_handler
            logout:
                path: api_logout
                success_handler: logout.success_handler
                handlers: [logout.handler]
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/posts, roles: ROLE_ADMIN, methods: [POST, PUT, DELETE] }
        - { path: ^/subscribers/confirm, roles: [IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER], methods: [GET] }
        - { path: '^/subscribers/[A-Za-z0-9]{32}$', roles: [IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER], methods: [DELETE] }
        - { path: ^/subscribers, roles: ROLE_ADMIN, methods: [GET] }
        - { path: ^/subscribers/\d+, roles: ROLE_ADMIN, methods: [DELETE] }
        - { path: ^/schools, roles: ROLE_ADMIN, methods: [PUT, DELETE] }
        - { path: ^/logout, roles: ROLE_USER, methods: [GET] }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

services:
    json_login.failure_handler:
        class: App\Security\JsonAuthenticationFailureHandler
    logout.success_handler:
        class: App\Security\LogoutSuccessHandler
    logout.handler:
        autowire: true
        class: App\Security\LogoutHandler
